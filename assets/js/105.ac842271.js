(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{271:function(t,v,_){"use strict";_.r(v);var r=_(0),s=Object(r.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("div",{staticClass:"content"},[_("h2",{attrs:{id:"ruby-正则表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ruby-正则表达式"}},[t._v("#")]),t._v(" Ruby 正则表达式")]),t._v(" "),_("p",[t._v("正则表达式是一种特殊序列的字符，它通过使用有专门语法的模式来匹配或查找字符串集合。")]),t._v(" "),_("p",[t._v('正则表达式用事先定义好的一些特定字符、及这些特定字符的组合，组成一个"规则字符串"，这个"规则字符串"用来表达对字符串的一种过滤逻辑。')]),t._v(" "),_("div",{staticClass:"language-rb extra-class"},[_("pre",{pre:!0,attrs:{class:"language-rb"}},[_("code",[_("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/pattern/")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pattern"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("im    "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以指定选项")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token regex"}},[t._v("%r!/usr/local!")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用分隔符的正则表达式")]),t._v("\n")])])]),_("p",[t._v("1、正则表达式修饰符")]),t._v(" "),_("p",[t._v("正则表达式从字面上看可能包含一个可选的修饰符，用于控制各方面的匹配。修饰符在第二个斜杠字符后指定，如上面实例所示。下标列出了 可能的修饰符：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("修饰符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("i")]),t._v(" "),_("td",[t._v("当匹配文本时忽略大小写。")])]),t._v(" "),_("tr",[_("td",[t._v("o")]),t._v(" "),_("td",[t._v("只执行一次 #{} 插值，正则表达式在第一次时就进行判断。")])]),t._v(" "),_("tr",[_("td",[t._v("x")]),t._v(" "),_("td",[t._v("忽略空格，允许在整个表达式中放入空白符和注释。")])]),t._v(" "),_("tr",[_("td",[t._v("m")]),t._v(" "),_("td",[t._v("匹配多行，把换行字符识别为正常字符。")])]),t._v(" "),_("tr",[_("td",[t._v("u,e,s,n")]),t._v(" "),_("td",[t._v("把正则表达式解释为 Unicode（UTF-8）、EUC、SJIS 或 ASCII。如果没有指定修饰符，则认为正则表达式使用的是源编码。")])])])]),t._v(" "),_("p",[t._v("就像字符串通过 %Q 进行分隔一样，Ruby 允许您以 %r 作为正则表达式的开头，后面跟着任意分隔符。这在描述包含大量您不想转义的斜杠字符时非常有用。")]),t._v(" "),_("div",{staticClass:"language-rb extra-class"},[_("pre",{pre:!0,attrs:{class:"language-rb"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面匹配单个斜杠字符，不转义")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token regex"}},[t._v("%r|/|")]),t._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Flag 字符可通过下面的语法进行匹配")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token regex"}},[t._v("%r[</(.*)>]i")]),t._v("\n")])])]),_("p",[t._v("2、正则表达式模式")]),t._v(" "),_("p",[t._v("除了控制字符，(+ ? . * ^ $ ( ) [ ] { } | "),_("code",[t._v("\\")]),t._v(")，其他所有字符都匹配本身。您可以通过在控制字符前放置一个反斜杠来对控制字符进行转义。")]),t._v(" "),_("p",[t._v("下表列出了 Ruby 中可用的正则表达式语法。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("模式")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("^")]),t._v(" "),_("td",[t._v("匹配行的开头。")])]),t._v(" "),_("tr",[_("td",[t._v("$")]),t._v(" "),_("td",[t._v("匹配行的结尾。")])]),t._v(" "),_("tr",[_("td",[t._v(".")]),t._v(" "),_("td",[t._v("匹配除了换行符以外的任意单字符。使用 m 选项时，它也可以匹配换行符。")])]),t._v(" "),_("tr",[_("td",[t._v("[...]")]),t._v(" "),_("td",[t._v("匹配在方括号中的任意单字符。")])]),t._v(" "),_("tr",[_("td",[t._v("[^...]")]),t._v(" "),_("td",[t._v("匹配不在方括号中的任意单字符。")])]),t._v(" "),_("tr",[_("td",[t._v("re*")]),t._v(" "),_("td",[t._v("匹配前面的子表达式零次或多次。")])]),t._v(" "),_("tr",[_("td",[t._v("re+")]),t._v(" "),_("td",[t._v("匹配前面的子表达式一次或多次。")])]),t._v(" "),_("tr",[_("td",[t._v("re?")]),t._v(" "),_("td",[t._v("匹配前面的子表达式零次或一次。")])]),t._v(" "),_("tr",[_("td",[t._v("re{ n}")]),t._v(" "),_("td",[t._v("匹配前面的子表达式 n 次。")])]),t._v(" "),_("tr",[_("td",[t._v("re{ n,}")]),t._v(" "),_("td",[t._v("匹配前面的子表达式 n 次或 n 次以上。")])]),t._v(" "),_("tr",[_("td",[t._v("re{ n, m}")]),t._v(" "),_("td",[t._v("匹配前面的子表达式至少 n 次至多 m 次。")])]),t._v(" "),_("tr",[_("td",[t._v("a"),_("code",[t._v("|")]),t._v(" b")]),t._v(" "),_("td",[t._v("匹配 a 或 b。")])]),t._v(" "),_("tr",[_("td",[t._v("(re)")]),t._v(" "),_("td",[t._v("对正则表达式进行分组，并记住匹配文本。")])]),t._v(" "),_("tr",[_("td",[t._v("(?imx)")]),t._v(" "),_("td",[t._v("暂时打开正则表达式内的 i、 m 或 x 选项。如果在圆括号中，则只影响圆括号内的部分。")])]),t._v(" "),_("tr",[_("td",[t._v("(?-imx)")]),t._v(" "),_("td",[t._v("暂时关闭正则表达式内的 i、 m 或 x 选项。如果在圆括号中，则只影响圆括号内的部分。")])]),t._v(" "),_("tr",[_("td",[t._v("(?: re)")]),t._v(" "),_("td",[t._v("对正则表达式进行分组，但不记住匹配文本。")])]),t._v(" "),_("tr",[_("td",[t._v("(?imx: re)")]),t._v(" "),_("td",[t._v("暂时打开圆括号内的 i、 m 或 x 选项。")])]),t._v(" "),_("tr",[_("td",[t._v("(?-imx: re)")]),t._v(" "),_("td",[t._v("暂时关闭圆括号内的 i、 m 或 x 选项。")])]),t._v(" "),_("tr",[_("td",[t._v("(?#...)")]),t._v(" "),_("td",[t._v("注释。")])]),t._v(" "),_("tr",[_("td",[t._v("(?= re)")]),t._v(" "),_("td",[t._v("使用模式指定位置。没有范围。")])]),t._v(" "),_("tr",[_("td",[t._v("(?! re)")]),t._v(" "),_("td",[t._v("使用模式的否定指定位置。没有范围。")])]),t._v(" "),_("tr",[_("td",[t._v("(?> re)")]),t._v(" "),_("td",[t._v("匹配无回溯的独立模式。")])]),t._v(" "),_("tr",[_("td",[t._v("\\w")]),t._v(" "),_("td",[t._v("匹配单词字符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\W")]),t._v(" "),_("td",[t._v("匹配非单词字符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\s")]),t._v(" "),_("td",[t._v("匹配空白字符。等价于 [\\t\\n\\r\\f]。")])]),t._v(" "),_("tr",[_("td",[t._v("\\S")]),t._v(" "),_("td",[t._v("匹配非空白字符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\d")]),t._v(" "),_("td",[t._v("匹配数字。等价于 [0-9]。")])]),t._v(" "),_("tr",[_("td",[t._v("\\D")]),t._v(" "),_("td",[t._v("匹配非数字。")])]),t._v(" "),_("tr",[_("td",[t._v("\\A")]),t._v(" "),_("td",[t._v("匹配字符串的开头。")])]),t._v(" "),_("tr",[_("td",[t._v("\\Z")]),t._v(" "),_("td",[t._v("匹配字符串的结尾。如果存在换行符，则只匹配到换行符之前。")])]),t._v(" "),_("tr",[_("td",[t._v("\\z")]),t._v(" "),_("td",[t._v("匹配字符串的结尾。")])]),t._v(" "),_("tr",[_("td",[t._v("\\G")]),t._v(" "),_("td",[t._v("匹配最后一个匹配完成的点。")])]),t._v(" "),_("tr",[_("td",[t._v("\\b")]),t._v(" "),_("td",[t._v("当在括号外时匹配单词边界，当在括号内时匹配退格键（0x08）。")])]),t._v(" "),_("tr",[_("td",[t._v("\\B")]),t._v(" "),_("td",[t._v("匹配非单词边界。")])]),t._v(" "),_("tr",[_("td",[t._v("\\n, \\t, etc.")]),t._v(" "),_("td",[t._v("匹配换行符、回车符、制表符，等等。")])]),t._v(" "),_("tr",[_("td",[t._v("\\1...\\9")]),t._v(" "),_("td",[t._v("匹配第 n 个分组子表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("\\10")]),t._v(" "),_("td",[t._v("如果已匹配过，则匹配第 n 个分组子表达式。否则指向字符编码的八进制表示。")])])])]),t._v(" "),_("p",[t._v("3、正则表达式实例")]),t._v(" "),_("p",[_("strong",[t._v("字符")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("/ruby/")]),t._v(" "),_("td",[t._v('匹配 "ruby"')])]),t._v(" "),_("tr",[_("td",[t._v("¥")]),t._v(" "),_("td",[t._v("匹配 Yen 符号。Ruby 1.9 和 Ruby 1.8 支持多个字符。")])])])]),t._v(" "),_("p",[_("strong",[t._v("字符类")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("/[Rr]uby/")]),t._v(" "),_("td",[t._v('匹配 "Ruby" 或 "ruby"')])]),t._v(" "),_("tr",[_("td",[t._v("/rub[ye]/")]),t._v(" "),_("td",[t._v('匹配 "ruby" 或 "rube"')])]),t._v(" "),_("tr",[_("td",[t._v("/[aeiou]/")]),t._v(" "),_("td",[t._v("匹配任何一个小写元音字母")])]),t._v(" "),_("tr",[_("td",[t._v("/[0-9]/")]),t._v(" "),_("td",[t._v("匹配任何一个数字，与 /[0123456789]/ 相同")])]),t._v(" "),_("tr",[_("td",[t._v("/[a-z]/")]),t._v(" "),_("td",[t._v("匹配任何一个小写 ASCII 字母")])]),t._v(" "),_("tr",[_("td",[t._v("/[A-Z]/")]),t._v(" "),_("td",[t._v("匹配任何一个大写 ASCII 字母")])]),t._v(" "),_("tr",[_("td",[t._v("/[a-zA-Z0-9]/")]),t._v(" "),_("td",[t._v("匹配任何一个括号内的字符")])]),t._v(" "),_("tr",[_("td",[t._v("/[^aeiou]/")]),t._v(" "),_("td",[t._v("匹配任何一个非小写元音字母的字符")])]),t._v(" "),_("tr",[_("td",[t._v("/[^0-9]/")]),t._v(" "),_("td",[t._v("匹配任何一个非数字字符")])])])]),t._v(" "),_("p",[_("strong",[t._v("特殊字符类")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("/./")]),t._v(" "),_("td",[t._v("匹配除了换行符以外的其他任意字符")])]),t._v(" "),_("tr",[_("td",[t._v("/./m")]),t._v(" "),_("td",[t._v("在多行模式下，也能匹配换行符")])]),t._v(" "),_("tr",[_("td",[t._v("/\\d/")]),t._v(" "),_("td",[t._v("匹配一个数字，等同于 /[0-9]/")])]),t._v(" "),_("tr",[_("td",[t._v("/\\D/")]),t._v(" "),_("td",[t._v("匹配一个非数字，等同于 /[^0-9]/")])]),t._v(" "),_("tr",[_("td",[t._v("/\\s/")]),t._v(" "),_("td",[t._v("匹配一个空白字符，等同于 /[ \\t\\r\\n\\f]/")])]),t._v(" "),_("tr",[_("td",[t._v("/\\S/")]),t._v(" "),_("td",[t._v("匹配一个非空白字符，等同于 /[^ \\t\\r\\n\\f]/")])]),t._v(" "),_("tr",[_("td",[t._v("/\\w/")]),t._v(" "),_("td",[t._v("匹配一个单词字符，等同于 /[A-Za-z0-9_]/")])]),t._v(" "),_("tr",[_("td",[t._v("/\\W/")]),t._v(" "),_("td",[t._v("匹配一个非单词字符，等同于 /[^a-za-z0-9_]/")])])])]),t._v(" "),_("p",[_("strong",[t._v("重复")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("/ruby?/")]),t._v(" "),_("td",[t._v('匹配 "rub" 或 "ruby"。其中，y 是可有可无的。')])]),t._v(" "),_("tr",[_("td",[t._v("/ruby*/")]),t._v(" "),_("td",[t._v('匹配 "rub" 加上 0 个或多个的 y。')])]),t._v(" "),_("tr",[_("td",[t._v("/ruby+/")]),t._v(" "),_("td",[t._v('匹配 "rub" 加上 1 个或多个的 y。')])]),t._v(" "),_("tr",[_("td",[t._v("/\\d{3}/")]),t._v(" "),_("td",[t._v("刚好匹配 3 个数字。")])]),t._v(" "),_("tr",[_("td",[t._v("/\\d{3,}/")]),t._v(" "),_("td",[t._v("匹配 3 个或多个数字。")])]),t._v(" "),_("tr",[_("td",[t._v("/\\d{3,5}/")]),t._v(" "),_("td",[t._v("匹配 3 个、4 个或 5 个数字。")])])])]),t._v(" "),_("p",[_("strong",[t._v("非贪婪重复")])]),t._v(" "),_("p",[t._v("这会匹配最小次数的重复。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("/<.*>/")]),t._v(" "),_("td",[t._v('贪婪重复：匹配 "'),_("ruby",[t._v('perl>"')])])]),t._v(" "),_("tr",[_("td",[t._v("/<.*?>/")]),t._v(" "),_("td",[t._v('非贪婪重复：匹配 "'),_("ruby",[t._v('perl>" 中的 "'),_("ruby",[t._v('"')])])])])])]),t._v(" "),_("p",[_("strong",[t._v("通过圆括号进行分组")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("/\\D\\d+/")]),t._v(" "),_("td",[t._v("无分组： + 重复 \\d")])]),t._v(" "),_("tr",[_("td",[t._v("/(\\D\\d)+/")]),t._v(" "),_("td",[t._v("分组： + 重复 \\D\\d 对")])]),t._v(" "),_("tr",[_("td",[t._v("/([Rr]uby(, )?)+/")]),t._v(" "),_("td",[t._v('匹配 "Ruby"、"Ruby, ruby, ruby"，等等')])])])]),t._v(" "),_("p",[_("strong",[t._v("反向引用")])]),t._v(" "),_("p",[t._v("这会再次匹配之前匹配过的分组。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("code",[t._v("/([Rr])uby&\\1ails/")])]),t._v(" "),_("td",[t._v("匹配 ruby&rails 或 Ruby&Rails")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("/(['\"])(?:(?!\\1).)\\*\\1/")])]),t._v(" "),_("td",[t._v("单引号或双引号字符串。\\1 匹配第一个分组所匹配的字符，\\2 匹配第二个分组所匹配的字符，依此类推。")])])])]),t._v(" "),_("p",[_("strong",[t._v("替换")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("code",[t._v("/ruby|rube/")])]),t._v(" "),_("td",[t._v('匹配 "ruby" 或 "rube"')])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("/rub(y|le)/")])]),t._v(" "),_("td",[t._v('匹配 "ruby" 或 "ruble"')])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("/ruby(!+|\\?)/")])]),t._v(" "),_("td",[t._v('"ruby" 后跟一个或多个 ! 或者跟一个 ?')])])])]),t._v(" "),_("p",[_("strong",[t._v("锚")])]),t._v(" "),_("p",[t._v("这需要指定匹配位置。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("/^Ruby/")]),t._v(" "),_("td",[t._v('匹配以 "Ruby" 开头的字符串或行')])]),t._v(" "),_("tr",[_("td",[t._v("/Ruby$/")]),t._v(" "),_("td",[t._v('匹配以 "Ruby" 结尾的字符串或行')])]),t._v(" "),_("tr",[_("td",[t._v("/\\ARuby/")]),t._v(" "),_("td",[t._v('匹配以 "Ruby" 开头的字符串')])]),t._v(" "),_("tr",[_("td",[t._v("/Ruby\\Z/")]),t._v(" "),_("td",[t._v('匹配以 "Ruby" 结尾的字符串')])]),t._v(" "),_("tr",[_("td",[t._v("/\\bRuby\\b/")]),t._v(" "),_("td",[t._v('匹配单词边界的 "Ruby"')])]),t._v(" "),_("tr",[_("td",[t._v("/\\brub\\B/")]),t._v(" "),_("td",[t._v('\\B 是非单词边界：匹配 "rube" 和 "ruby" 中的 "rub"，但不匹配单独的 "rub"')])]),t._v(" "),_("tr",[_("td",[t._v("/Ruby(?=!)/")]),t._v(" "),_("td",[t._v('如果 "Ruby" 后跟着一个感叹号，则匹配 "Ruby"')])]),t._v(" "),_("tr",[_("td",[t._v("/Ruby(?!!)/")]),t._v(" "),_("td",[t._v('如果 "Ruby" 后没有跟着一个感叹号，则匹配 "Ruby"')])])])]),t._v(" "),_("p",[_("strong",[t._v("圆括号的特殊语法")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("/R(?#comment)/")]),t._v(" "),_("td",[t._v('匹配 "R"。所有剩余的字符都是注释。')])]),t._v(" "),_("tr",[_("td",[t._v("/R(?i)uby/")]),t._v(" "),_("td",[t._v('当匹配 "uby" 时不区分大小写。')])]),t._v(" "),_("tr",[_("td",[t._v("/R(?i:uby)/")]),t._v(" "),_("td",[t._v("与上面相同。")])]),t._v(" "),_("tr",[_("td",[t._v("/rub(?:y"),_("code",[t._v("|")]),t._v("le))/")]),t._v(" "),_("td",[t._v("只分组，不进行 \\1 反向引用")])])])]),t._v(" "),_("p",[t._v("4、搜索和替换")]),t._v(" "),_("p",[_("code",[t._v("sub")]),t._v(" 和 "),_("code",[t._v("gsub")]),t._v(" 及它们的替代变量 "),_("code",[t._v("sub!")]),t._v(" 和 "),_("code",[t._v("gsub!")]),t._v(" 是使用正则表达式时重要的字符串方法。")]),t._v(" "),_("p",[t._v("所有这些方法都是使用正则表达式模式执行搜索与替换操作。sub 和 sub! 替换模式的第一次出现，"),_("code",[t._v("gsub")]),t._v(" 和 "),_("code",[t._v("gsub!")]),t._v(" 替换模式的所有出现。")]),t._v(" "),_("p",[t._v("sub 和 "),_("code",[t._v("gsub")]),t._v(" 返回一个新的字符串，保持原始的字符串不被修改，而 sub! 和 "),_("code",[t._v("gsub!")]),t._v(" 则会修改它们调用的字符串。")]),t._v(" "),_("div",{staticClass:"language-rb extra-class"},[_("pre",{pre:!0,attrs:{class:"language-rb"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/ruby")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*- coding: UTF-8 -*-")]),t._v("\n\nphone "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"138-3453-1111 #这是一个电话号码"')]),t._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除 Ruby 的注释")]),t._v("\nphone "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" phone"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/#.*$/")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nputs "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"电话号码 : '),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("#{")]),t._v("phone"),_("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("}")])]),t._v('"')]),t._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移除数字以外的其他字符")]),t._v("\nphone "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" phone"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gsub"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\D/")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nputs "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"电话号码 : '),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("#{")]),t._v("phone"),_("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("}")])]),t._v('"')]),t._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("=begin\n以上实例运行输出结果为：\n\n电话号码 : 138-3453-1111\n电话号码 : 13834531111\n=end")]),t._v("\n")])])]),_("div",{staticClass:"language-rb extra-class"},[_("pre",{pre:!0,attrs:{class:"language-rb"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/ruby")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*- coding: UTF-8 -*-")]),t._v("\n\ntext "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rails 是 rails,  Ruby on Rails 非常好的 Ruby 框架"')]),t._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 把所有的 "rails" 改为 "Rails"')]),t._v("\ntext"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gsub"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rails"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rails"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 把所有的单词 "Rails" 都改成首字母大写')]),t._v("\ntext"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gsub"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\brails\\b/")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rails"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nputs "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("#{")]),t._v("text"),_("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("}")])]),t._v('"')]),t._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("=begin\n以上实例运行输出结果为：\n\nRails 是 Rails,  Ruby on Rails 非常好的 Ruby 框架\n=end")]),t._v("\n")])])])])}],!1,null,null,null);v.default=s.exports}}]);