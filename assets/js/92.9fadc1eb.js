(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{258:function(t,_,v){"use strict";v.r(_);var d=v(0),e=Object(d.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("div",{staticClass:"content"},[v("h2",{attrs:{id:"ruby-file-类和方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ruby-file-类和方法"}},[t._v("#")]),t._v(" Ruby File 类和方法")]),t._v(" "),v("p",[t._v("1、类方法")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("序号")]),t._v(" "),v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[v("code",[t._v("File::atime( path)")])]),t._v(" "),v("td",[t._v("返回 path 的最后访问时间。")])]),t._v(" "),v("tr",[v("td",[t._v("2")]),t._v(" "),v("td",[v("code",[t._v("File::basename( path[, suffix])")])]),t._v(" "),v("td",[t._v('返回 path 末尾的文件名。如果指定了 suffix，则它会从文件名末尾被删除。例如：File.basename("/home/users/bin/ruby.exe") #=> "ruby.exe"')])]),t._v(" "),v("tr",[v("td",[t._v("3")]),t._v(" "),v("td",[v("code",[t._v("File::blockdev?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是一个块设备，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("4")]),t._v(" "),v("td",[v("code",[t._v("File::chardev?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是一个字符设备，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("5")]),t._v(" "),v("td",[v("code",[t._v("File::chmod( mode, path...)")])]),t._v(" "),v("td",[t._v("改变指定文件的权限模式。")])]),t._v(" "),v("tr",[v("td",[t._v("6")]),t._v(" "),v("td",[v("code",[t._v("File::chown( owner, group, path...)")])]),t._v(" "),v("td",[t._v("改变指定文件的所有者和所属组。")])]),t._v(" "),v("tr",[v("td",[t._v("7")]),t._v(" "),v("td",[v("code",[t._v("File::ctime( path)")])]),t._v(" "),v("td",[t._v("返回 path 的最后一个 inode 更改时间。")])]),t._v(" "),v("tr",[v("td",[t._v("8")]),t._v(" "),v("td",[v("code",[t._v("File::delete( path...) File::unlink( path...)")])]),t._v(" "),v("td",[t._v("删除指定的文件。")])]),t._v(" "),v("tr",[v("td",[t._v("9")]),t._v(" "),v("td",[v("code",[t._v("File::directory?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是一个目录，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("10")]),t._v(" "),v("td",[v("code",[t._v("File::dirname( path)")])]),t._v(" "),v("td",[t._v("返回 path 的目录部分，不包括最后的文件名。")])]),t._v(" "),v("tr",[v("td",[t._v("11")]),t._v(" "),v("td",[v("code",[t._v("File::executable?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是可执行的，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("12")]),t._v(" "),v("td",[v("code",[t._v("File::executable_real?( path)")])]),t._v(" "),v("td",[t._v("如果 path 通过真正的用户权限是可执行的，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("13")]),t._v(" "),v("td",[v("code",[t._v("File::exist?( path)")])]),t._v(" "),v("td",[t._v("如果 path 存在，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[v("code",[t._v("File::expand_path( path[, dir])")])]),t._v(" "),v("td",[t._v("返回 path 的绝对路径，扩展 ~ 为进程所有者的主目录，~user 为用户的主目录。相对路径是相对于 dir 指定的目录，如果 dir 被省略则相对于当前工作目录。")])]),t._v(" "),v("tr",[v("td",[t._v("14")]),t._v(" "),v("td",[v("code",[t._v("File::file?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是一个普通文件，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("15")]),t._v(" "),v("td",[v("code",[t._v("File::ftype( path)")])]),t._v(" "),v("td",[t._v("返回下列其中一个字符串,表示文件类型：file - 普通文件 directory - 目录 characterSpecial - 字符特殊文件 blockSpecial - 块特殊文件 fifo - 命名管道（FIFO） link - 符号链接 socket - Socket unknown - 未知的文件类型")])]),t._v(" "),v("tr",[v("td",[t._v("16")]),t._v(" "),v("td",[v("code",[t._v("File::grpowned?( path)")])]),t._v(" "),v("td",[t._v("如果 path 由用户的所属组所有，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("17")]),t._v(" "),v("td",[v("code",[t._v("File::join( item...)")])]),t._v(" "),v("td",[t._v('返回一个字符串，由指定的项连接在一起，并使用 File::Separator 进行分隔。例如：File::join("", "home", "usrs", "bin") # => "/home/usrs/bin"')])]),t._v(" "),v("tr",[v("td",[t._v("18")]),t._v(" "),v("td",[v("code",[t._v("File::link( old, new)")])]),t._v(" "),v("td",[t._v("创建一个到文件 old 的硬链接。")])]),t._v(" "),v("tr",[v("td",[t._v("19")]),t._v(" "),v("td",[v("code",[t._v("File::lstat( path)")])]),t._v(" "),v("td",[t._v("与 stat 相同，但是它返回自身符号链接上的信息，而不是所指向的文件。")])]),t._v(" "),v("tr",[v("td",[t._v("20")]),t._v(" "),v("td",[v("code",[t._v("File::mtime( path)")])]),t._v(" "),v("td",[t._v("返回 path 的最后一次修改时间。")])]),t._v(" "),v("tr",[v("td",[t._v("21")]),t._v(" "),v("td",[v("code",[t._v('File::new( path[, mode="r"]) File::open( path[, mode="r"]) File::open( path[, mode="r"]) {|f| ...}')])]),t._v(" "),v("td",[t._v("打开文件。如果指定了块，则通过传递新文件作为参数来执行块。当块退出时，文件会自动关闭。这些方法有别于 Kernel.open，即使 path 是以")])]),t._v(" "),v("tr",[v("td",[t._v("22")]),t._v(" "),v("td",[v("code",[t._v("File::owned?( path)")])]),t._v(" "),v("td",[t._v("如果 path 由有效的用户所有，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("23")]),t._v(" "),v("td",[v("code",[t._v("File::pipe?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是一个管道，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("24")]),t._v(" "),v("td",[v("code",[t._v("File::readable?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是可读的，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("25")]),t._v(" "),v("td",[v("code",[t._v("File::readable_real?( path)")])]),t._v(" "),v("td",[t._v("如果 path 通过真正的用户权限是可读的，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("25")]),t._v(" "),v("td",[v("code",[t._v("File::readlink( path)")])]),t._v(" "),v("td",[t._v("返回 path 所指向的文件。")])]),t._v(" "),v("tr",[v("td",[t._v("26")]),t._v(" "),v("td",[v("code",[t._v("File::rename( old, new)")])]),t._v(" "),v("td",[t._v("改变文件名 old 为 new。")])]),t._v(" "),v("tr",[v("td",[t._v("27")]),t._v(" "),v("td",[v("code",[t._v("File::setgid?( path)")])]),t._v(" "),v("td",[t._v("如果设置了 path 的 set-group-id 权限位，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("28")]),t._v(" "),v("td",[v("code",[t._v("File::setuid?( path)")])]),t._v(" "),v("td",[t._v("如果设置了 path 的 set-user-id 权限位，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("29")]),t._v(" "),v("td",[v("code",[t._v("File::size( path)")])]),t._v(" "),v("td",[t._v("返回 path 的文件大小。")])]),t._v(" "),v("tr",[v("td",[t._v("30")]),t._v(" "),v("td",[v("code",[t._v("File::size?( path)")])]),t._v(" "),v("td",[t._v("返回 path 的文件大小，如果为 0 则返回 nil。")])]),t._v(" "),v("tr",[v("td",[t._v("31")]),t._v(" "),v("td",[v("code",[t._v("File::socket?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是一个 socket，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("32")]),t._v(" "),v("td",[v("code",[t._v("File::split( path)")])]),t._v(" "),v("td",[t._v("返回一个数组，包含 path 的内容，path 被分成 File::dirname(path) 和 File::basename(path)。")])]),t._v(" "),v("tr",[v("td",[t._v("33")]),t._v(" "),v("td",[v("code",[t._v("File::stat( path)")])]),t._v(" "),v("td",[t._v("返回 path 上带有信息的 File::Stat 对象。")])]),t._v(" "),v("tr",[v("td",[t._v("34")]),t._v(" "),v("td",[v("code",[t._v("File::sticky?( path)")])]),t._v(" "),v("td",[t._v("如果设置了 path 的 sticky 位，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("35")]),t._v(" "),v("td",[v("code",[t._v("File::symlink( old, new)")])]),t._v(" "),v("td",[t._v("创建一个指向文件 old 的符号链接。")])]),t._v(" "),v("tr",[v("td",[t._v("36")]),t._v(" "),v("td",[v("code",[t._v("File::symlink?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是一个符号链接，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("37")]),t._v(" "),v("td",[v("code",[t._v("File::truncate( path, len)")])]),t._v(" "),v("td",[t._v("截断指定的文件为 len 字节。")])]),t._v(" "),v("tr",[v("td",[t._v("38")]),t._v(" "),v("td",[v("code",[t._v("File::unlink( path...)")])]),t._v(" "),v("td",[t._v("删除 path 给定的文件。")])]),t._v(" "),v("tr",[v("td",[t._v("39")]),t._v(" "),v("td",[v("code",[t._v("File::umask([ mask])")])]),t._v(" "),v("td",[t._v("如果未指定参数，则为该进程返回当前的 umask。如果指定了一个参数，则设置了 umask，并返回旧的 umask。")])]),t._v(" "),v("tr",[v("td",[t._v("40")]),t._v(" "),v("td",[v("code",[t._v("File::utime( atime, mtime, path...)")])]),t._v(" "),v("td",[t._v("改变指定文件的访问和修改时间。")])]),t._v(" "),v("tr",[v("td",[t._v("41")]),t._v(" "),v("td",[v("code",[t._v("File::writable?( path)")])]),t._v(" "),v("td",[t._v("如果 path 是可写的，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("42")]),t._v(" "),v("td",[v("code",[t._v("File::writable_real?( path)")])]),t._v(" "),v("td",[t._v("如果 path 通过真正的用户权限是可写的，则返回 true。")])]),t._v(" "),v("tr",[v("td",[t._v("43")]),t._v(" "),v("td",[v("code",[t._v("File::zero?( path)")])]),t._v(" "),v("td",[t._v("如果 path 的文件大小是 0，则返回 true。")])])])]),t._v(" "),v("p",[t._v("2、实例方法")]),t._v(" "),v("p",[t._v("假设 f 是 File 类的一个实例：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("序号")]),t._v(" "),v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[v("code",[t._v("f.atime")])]),t._v(" "),v("td",[t._v("返回 f 的最后访问时间。")])]),t._v(" "),v("tr",[v("td",[t._v("2")]),t._v(" "),v("td",[v("code",[t._v("f.chmode( mode)")])]),t._v(" "),v("td",[t._v("改变 f 的权限模式。")])]),t._v(" "),v("tr",[v("td",[t._v("3")]),t._v(" "),v("td",[v("code",[t._v("f.chown( owner, group)")])]),t._v(" "),v("td",[t._v("改变 f 的所有者和所属组。")])]),t._v(" "),v("tr",[v("td",[t._v("4")]),t._v(" "),v("td",[v("code",[t._v("f.ctime")])]),t._v(" "),v("td",[t._v("返回 f 的最后一个 inode 更改时间。")])]),t._v(" "),v("tr",[v("td",[t._v("5")]),t._v(" "),v("td",[v("code",[t._v("f.flock( op)")])]),t._v(" "),v("td",[t._v("调用 flock(2)。op 可以是 0 或一个逻辑值或 File 类常量 LOCK_EX、LOCK_NB、LOCK_SH 和 LOCK_UN。")])]),t._v(" "),v("tr",[v("td",[t._v("6")]),t._v(" "),v("td",[v("code",[t._v("f.lstat")])]),t._v(" "),v("td",[t._v("与 stat 相同，但是它返回自身符号链接上的信息，而不是所指向的文件。")])]),t._v(" "),v("tr",[v("td",[t._v("7")]),t._v(" "),v("td",[v("code",[t._v("f.mtime")])]),t._v(" "),v("td",[t._v("返回 f 的最后修改时间。")])]),t._v(" "),v("tr",[v("td",[t._v("8")]),t._v(" "),v("td",[v("code",[t._v("f.path")])]),t._v(" "),v("td",[t._v("返回用于创建 f 的路径名。")])]),t._v(" "),v("tr",[v("td",[t._v("9")]),t._v(" "),v("td",[v("code",[t._v('f.reopen( path[, mode="r"])')])]),t._v(" "),v("td",[t._v("重新打开文件。")])]),t._v(" "),v("tr",[v("td",[t._v("10")]),t._v(" "),v("td",[v("code",[t._v("f.truncate( len)")])]),t._v(" "),v("td",[t._v("截断 f 为 len 字节。")])])])])])}],!1,null,null,null);_.default=e.exports}}]);