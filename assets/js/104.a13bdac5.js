(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{270:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},(function(){var s=this.$createElement;this._self._c;return this._m(0)}),[function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"content"},[n("h2",{attrs:{id:"ruby-模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ruby-模块"}},[s._v("#")]),s._v(" Ruby 模块")]),s._v(" "),n("p",[s._v("模块（Module）是一种把方法、类和常量组合在一起的方式。模块（Module）为您提供了两大好处:")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("模块提供了一个命名空间和避免名字冲突。")])]),s._v(" "),n("li",[n("p",[s._v("模块实现了 mixin 装置。")])])]),s._v(" "),n("p",[s._v("模块（Module）定义了一个命名空间，相当于一个沙盒，在里边您的方法和常量不会与其他地方的方法常量冲突。")]),s._v(" "),n("p",[s._v("模块类似与类，但有以下不同：")]),s._v(" "),n("ul",[n("li",[s._v("模块不能实例化")]),s._v(" "),n("li",[s._v("模块没有子类")]),s._v(" "),n("li",[s._v("模块只能被另一个模块定义")])]),s._v(" "),n("div",{staticClass:"language-ruby extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("module")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MoudleName")]),s._v("\n   statement1\n   statement2\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])])]),n("p",[s._v("模块常量命名与类常量命名类似，以大写字母开头")]),s._v(" "),n("p",[s._v("您可以在类方法名称前面放置模块名称和一个点号来调用模块方法，您可以使用模块名称和变量引用符（两个冒号）来引用一个常量。")]),s._v(" "),n("div",{staticClass:"language-ruby extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/ruby")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义在 trig.rb 文件中的模块")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("module")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Trig")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PI")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.141592654")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Trig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sin")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ..")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Trig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cos")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ..")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])])]),n("div",{staticClass:"language-ruby extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/ruby")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义在 moral.rb 文件中的模块")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 就像类方法，当您在模块中定义一个方法时，您可以指定在模块名称后跟着一个点号，点号后跟着方法名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("module")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Moral")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VERY_BAD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BAD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Moral")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sin")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("badness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])])]),n("p",[s._v("当一个类可以从多个父类继承类的特性时，该类显示为多重继承。")]),s._v(" "),n("p",[s._v("Ruby 不直接支持多重继承，但是 Ruby 的模块（Module）有另一个神奇的功能。它几乎消除了多重继承的需要，提供了一种名为 "),n("code",[s._v("mixin")]),s._v(" 的装置。将模块 include 到类定义中，模块中的方法就 mix 进了类中。")]),s._v(" "),n("div",{staticClass:"language-ruby extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("module")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("a1")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("a2")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("module")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("B")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("b1")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("b2")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sample")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("B")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("s1")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n\nsamp"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Sample")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v("\nsamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a1\nsamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a2\nsamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b1\nsamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b2\nsamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s1\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#可以看到类 Sample 继承了两个模块，您可以说类 Sample 使用了多重继承或 mixin")]),s._v("\n")])])])])}],!1,null,null,null);t.default=e.exports}}]);