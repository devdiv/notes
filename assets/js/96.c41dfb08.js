(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{262:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h2",{attrs:{id:"ruby-块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ruby-块"}},[t._v("#")]),t._v(" Ruby 块")]),t._v(" "),n("ul",[n("li",[t._v("块由大量的代码组成。")]),t._v(" "),n("li",[t._v("您需要给块取个名称。")]),t._v(" "),n("li",[t._v("块中的代码总是包含在大括号 {} 内。")]),t._v(" "),n("li",[t._v("块总是从与其具有相同名称的函数调用。这意味着如果您的块名称为 test，那么您要使用函数 test 来调用这个块。")]),t._v(" "),n("li",[t._v("您可以使用 "),n("code",[t._v("yield")]),t._v(" 语句来调用块。")])]),t._v(" "),n("div",{staticClass:"language-ruby extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[t._v("block_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   statement1\n   statement2\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-ruby extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/ruby")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\ntest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" puts "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如果方法的最后一个参数前带有 &，那么您可以向该方法传递一个块，且这个块可被赋给最后一个参数。如果 * 和 & 同时出现在参数列表中，& 应放在后面。")]),t._v(" "),n("div",{staticClass:"language-ruby extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/ruby")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token method-definition"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("block"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   block"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\ntest "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" puts "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("每个 Ruby 源文件可以声明当文件被加载时要运行的代码块（BEGIN 块），以及程序完成执行后要运行的代码块（END 块）。")]),t._v(" "),n("div",{staticClass:"language-ruby extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/ruby")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# BEGIN 代码块")]),t._v("\n  puts "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BEGIN 代码块"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# END 代码块")]),t._v("\n  puts "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"END 代码块"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# MAIN 代码块")]),t._v("\nputs "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MAIN 代码块"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出以下结果:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# BEGIN 代码块")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# MAIN 代码块")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# END 代码块")]),t._v("\n")])])]),n("p",[t._v("一个程序可以包含多个 BEGIN 和 END 块。BEGIN 块按照它们出现的顺序执行。END 块按照它们出现的相反顺序执行。")])])}],!1,null,null,null);s.default=e.exports}}]);