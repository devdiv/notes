(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{180:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this.$createElement;this._self._c;return this._m(0)}),[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"shell"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell"}},[s._v("#")]),s._v(" Shell")]),s._v(" "),t("p",[s._v("Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。")]),s._v(" "),t("p",[s._v("Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。")]),s._v(" "),t("p",[s._v("Ken Thompson 的 sh 是第一种 Unix Shell，Windows Explorer 是一个典型的图形界面 Shell。")]),s._v(" "),t("p",[s._v("Shell 编程跟 JavaScript、php 编程一样，只要有一个能编写代码的文本编辑器和一个能解释执行的脚本解释器就可以了。")]),s._v(" "),t("p",[s._v("Linux 的 Shell 种类众多，常见的有：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Bourne Shell（Bash Shell）（/usr/bin/sh 或/bin/sh）")])]),s._v(" "),t("li",[t("p",[s._v("Bourne Again Shell（/bin/bash）")])]),s._v(" "),t("li",[t("p",[s._v("C Shell（/usr/bin/csh）")])]),s._v(" "),t("li",[t("p",[s._v("K Shell（/usr/bin/ksh）")])]),s._v(" "),t("li",[t("p",[s._v("Shell for Root（/sbin/sh）\n……")])])]),s._v(" "),t("ul",[t("li",[t("h2",{attrs:{id:"shell-开始"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-开始"}},[s._v("#")]),s._v(" Shell 开始")])])]),s._v(" "),t("p",[s._v("1、 运行 Shell 脚本")]),s._v(" "),t("p",[s._v("打开文本编辑器(可以使用 vi/vim 命令来创建文件)，新建一个文件 test.sh，扩展名为 "),t("code",[s._v("sh")]),s._v("（sh 代表 shell），扩展名并不影响脚本执行，见名知意就好，如果你用 php 写 shell 脚本，扩展名就用 php 好了。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World !"')]),s._v("\n")])])]),t("p",[s._v("#! 是一个约定的标记，它告诉系统这个脚本需要什么解释器来执行，即使用哪一种 Shell。")]),s._v(" "),t("p",[s._v("1）作为可执行程序")]),s._v(" "),t("p",[s._v("将上面的代码保存为 test.sh，并 cd 到相应目录：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x ./test.sh  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使脚本具有执行权限")]),s._v("\n./test.sh  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#执行脚本")]),s._v("\n")])])]),t("p",[s._v("注意，一定要写成 ./test.sh，而不是 test.sh，运行其它二进制的程序也一样，直接写 test.sh，linux 系统会去 PATH 里寻找有没有叫 test.sh 的，而只有 /bin, /sbin, /usr/bin，/usr/sbin 等在 PATH 里，你的当前目录通常不在 PATH 里，所以写成 test.sh 是会找不到命令的，要用 ./test.sh 告诉系统说，就在当前目录找。")]),s._v(" "),t("p",[s._v("2）作为解释器参数")]),s._v(" "),t("p",[s._v("这种运行方式是，直接运行解释器，其参数就是 shell 脚本的文件名，如：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("/bin/sh test.sh\n/bin/php test.php\n")])])]),t("p",[s._v("这种方式运行的脚本，不需要在第一行指定解释器信息。")]),s._v(" "),t("p",[s._v("2、Shell 注释")]),s._v(" "),t("p",[s._v("单行注释：#")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#--------------------------------------------")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# name:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# des:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# author：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# date：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#--------------------------------------------")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##### 执行清理操作 开始 #####")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# para:这里可以添加脚本参数信息")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##### 执行清理操作 结束  #####")]),s._v("\n")])])]),t("p",[s._v("多行注释：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n注释内容...\n注释内容...\n注释内容...\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或:")]),s._v("\n:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\n注释内容...\n注释内容...\n注释内容...\n'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或:")]),s._v("\n:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n注释内容"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n注释内容"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n注释内容"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])])]),t("ul",[t("li",[t("h2",{attrs:{id:"shell-变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-变量"}},[s._v("#")]),s._v(" Shell 变量")])])]),s._v(" "),t("p",[s._v("定义变量时，变量名不加美元符号（$，PHP 语言中变量需要），如：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"School"')]),s._v("\n")])])]),t("p",[s._v("注意，变量名和等号之间不能有空格，这可能和你熟悉的所有编程语言都不一样。同时，变量名的命名须遵循如下规则：")]),s._v(" "),t("ul",[t("li",[s._v("命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。")]),s._v(" "),t("li",[s._v("中间不能有空格，可以使用下划线（_）。")]),s._v(" "),t("li",[s._v("不能使用标点符号。")]),s._v(" "),t("li",[s._v("不能使用 bash 里的关键字（可用 help 命令查看保留关键字）。")])]),s._v(" "),t("p",[s._v("有效的 Shell 变量名示例如下：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("SCHOOL\nLIBRARY_PATH\n_var\nvar1\n")])])]),t("p",[s._v("1、 使用变量")]),s._v(" "),t("p",[s._v("使用一个定义过的变量，只要在变量名前面加美元符号即可，如：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"School"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_class")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_class}")]),s._v("\n")])])]),t("p",[s._v("变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界，比如下面这种情况：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("skill")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" Ada Coffe Action Java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I am good at '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${skill}")]),s._v('Script"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("2、只读变量")]),s._v(" "),t("p",[s._v("使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变。")]),s._v(" "),t("p",[s._v("下面的例子尝试更改只读变量，结果报错：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"School"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("readonly")]),s._v(" my_class\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MySchool"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行脚本，结果如下：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /bin/sh: NAME: This variable is read only.")]),s._v("\n")])])]),t("p",[s._v("3、删除变量")]),s._v(" "),t("p",[s._v("使用 unset 命令可以删除变量。语法：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" variable_name\n")])])]),t("p",[s._v("变量被删除后不能再次使用。unset 命令不能删除只读变量。")]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"School"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" my_class\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_class")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以上实例执行将没有任何输出。")]),s._v("\n")])])]),t("p",[s._v("4、变量类型")]),s._v(" "),t("p",[s._v("运行 shell 时，会同时存在三种变量：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("局部变量")]),s._v(" 局部变量在脚本或命令中定义，仅在当前 shell 实例中有效，其他 shell 启动的程序不能访问局部变量。")]),s._v(" "),t("li",[t("strong",[s._v("环境变量")]),s._v(" 所有的程序，包括 shell 启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候 shell 脚本也可以定义环境变量。")]),s._v(" "),t("li",[t("strong",[s._v("shell 变量")]),s._v(" shell 变量是由 shell 程序设置的特殊变量。shell 变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了 shell 的正常运行")])]),s._v(" "),t("ul",[t("li",[t("h2",{attrs:{id:"shell-字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-字符串"}},[s._v("#")]),s._v(" Shell 字符串")])])]),s._v(" "),t("p",[s._v("字符串是 shell 编程中最常用最有用的数据类型（除了数字和字符串，也没啥其它类型好用了），字符串可以用单引号，也可以用双引号，也可以不用引号。单双引号的区别跟 PHP 类似。")]),s._v(" "),t("p",[s._v("字符串是 shell 编程中最常用最有用的数据类型（除了数字和字符串，也没啥其它类型好用了），字符串可以用单引号，也可以用双引号，也可以不用引号。单双引号的区别跟 PHP 类似。")]),s._v(" "),t("p",[s._v("1、单双引号")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("引号")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("单引号")]),s._v(" "),t("td",[s._v("单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；"),t("br"),s._v("单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用;")])]),s._v(" "),t("tr",[t("td",[s._v("双引号")]),s._v(" "),t("td",[s._v("双引号里可以有变量；"),t("br"),s._v("双引号里可以出现转义字符；")])])])]),s._v(" "),t("p",[s._v("2、拼接字符串")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_class")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"School"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用双引号拼接")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("greeting")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello, "')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_class")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" !"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("greeting_1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello, '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_class}")]),s._v(' !"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$greeting")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$greeting_1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用单引号拼接")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("greeting_2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello, '")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_class")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' !'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("greeting_3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello, "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_class}")]),s._v(" !'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$greeting_2")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$greeting_3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出结果为：")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hello, runoob ! hello, runoob !")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hello, runoob ! hello, ${your_name} !")]),s._v("\n")])])]),t("p",[s._v("3、获取字符串长度")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abcd"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("string}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#输出 4")]),s._v("\n")])])]),t("p",[s._v("4、提取子字符串")]),s._v(" "),t("p",[s._v("以下实例从字符串第 2 个字符开始截取 4 个字符：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is a great site"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("4}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 'his '")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：第一个字符的索引值为 0。")]),s._v("\n")])])]),t("p",[s._v("5、查找子字符串")]),s._v(" "),t("p",[s._v("查找字符 i 或 o 的位置(哪个字母先出现就计算哪个)：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is a great site"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" index "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$string")]),s._v('"')]),s._v(" io"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 2")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意： 以上脚本中 ` 是反引号，而不是单引号 '")]),s._v("\n")])])]),t("ul",[t("li",[t("h2",{attrs:{id:"shell-数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-数组"}},[s._v("#")]),s._v(" Shell 数组")])])]),s._v(" "),t("p",[s._v("bash 支持一维数组（不支持多维数组），并且没有限定数组的大小。")]),s._v(" "),t("p",[s._v("类似于 C 语言，数组元素的下标由 0 开始编号。获取数组中的元素要利用下标，下标可以是整数或算术表达式，其值应大于或等于 0。")]),s._v(" "),t("p",[s._v("1、定义数组")]),s._v(" "),t("p",[s._v('在 Shell 中，用括号来表示数组，数组元素用"空格"符号分割开。定义数组的一般形式为：')]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("数组名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("值1 值2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". 值n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value0 value1 value2 value3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\nvalue0\nvalue1\nvalue2\nvalue3\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 还可以单独定义数组的各个分量：")]),s._v("\narray_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value0\narray_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1\narray_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("valuen\n")])])]),t("p",[s._v("可以不使用连续的下标，而且下标的范围没有限制。")]),s._v(" "),t("p",[s._v("2、读取数组")]),s._v(" "),t("p",[s._v("读取数组元素值的一般格式是：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${数组名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("下标"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("valuen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用 @ 符号可以获取数组中的所有元素，例如：")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n")])])]),t("p",[s._v("3、获取数组中的所有元素\n使用@ 或 * 可以获取数组中的所有元素，例如：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\nmy_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("A\nmy_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("B\nmy_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("C\nmy_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("D\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"数组的元素为: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"数组的元素为: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行脚本，输出结果如下所示：")]),s._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x test.sh\n$ ./test.sh\n数组的元素为: A B C D\n数组的元素为: A B C D\n")])])]),t("p",[s._v("4、获取数组长度")]),s._v(" "),t("p",[s._v("获取数组长度的方法与获取字符串长度的方法相同，例如：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取得数组元素的个数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("length")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("array_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("length")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("array_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取得数组单个元素的长度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("lengthn")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("array_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n")])])]),t("ul",[t("li",[t("h2",{attrs:{id:"shell-参数传递"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-参数传递"}},[s._v("#")]),s._v(" Shell 参数传递")])])]),s._v(" "),t("p",[s._v("我们可以在执行 Shell 脚本时，向脚本传递参数，脚本内获取参数的格式为：$n。n 代表一个数字，1 为执行脚本的第一个参数，2 为执行脚本的第二个参数，以此类推……")]),s._v(" "),t("p",[s._v("以下实例我们向脚本传递三个参数，并分别输出，其中 $0 为执行的文件名：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Shell 传递参数实例！"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"执行的文件名：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第一个参数为：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第二个参数为：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第三个参数为：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("为脚本设置可执行权限，并执行脚本，输出结果如下所示：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x test.sh\n$ ./test.sh "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nShell 传递参数实例！\n执行的文件名：./test.sh\n第一个参数为：1\n第二个参数为：2\n第三个参数为：3\n")])])]),t("p",[s._v("另外，还有几个特殊字符用来处理参数：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("参数处理")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("$#")])]),s._v(" "),t("td",[s._v("传递到脚本的参数个数")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$*")])]),s._v(" "),t("td",[s._v("以一个单字符串显示所有向脚本传递的参数。"),t("br"),s._v('如"$*"用「"」括起来的情况、以'),t("code",[s._v('"$1 $2 … $n"')]),s._v("的形式输出所有参数。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$$")])]),s._v(" "),t("td",[s._v("脚本运行的当前进程 ID 号")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$!")])]),s._v(" "),t("td",[s._v("后台运行的最后一个进程的 ID 号")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$@")])]),s._v(" "),t("td",[s._v("与"),t("code",[s._v("$*")]),s._v("相同，但是使用时加引号，并在引号中返回每个参数。"),t("br"),s._v('如"'),t("code",[s._v("$@")]),s._v('"用「"」括起来的情况、以'),t("code",[s._v('"$1" "$2" … "$n"')]),s._v(" 的形式输出所有参数。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$-")])]),s._v(" "),t("td",[s._v("显示 Shell 使用的当前选项，与"),t("code",[s._v("set")]),s._v("命令功能相同。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$?")])]),s._v(" "),t("td",[s._v("显示最后命令的退出状态。0 表示没有错误，其他任何值表明有错误。")])])])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Shell 传递参数实例！"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第一个参数为：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数个数为：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"传递的参数作为一个字符串显示：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行脚本，输出结果如下所示：")]),s._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x test.sh\n$ ./test.sh "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nShell 传递参数实例！\n第一个参数为：1\n参数个数为：3\n传递的参数作为一个字符串显示：1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])])]),t("p",[s._v("$* 与 $@ 区别：")]),s._v(" "),t("ul",[t("li",[s._v("相同点：都是引用所有参数。")]),s._v(" "),t("li",[s._v('不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 " * " 等价于 "1 2 3"（传递了一个参数），而 "@" 等价于 "1" "2" "3"（传递了三个参数）。')])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-- \\'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v(' 演示 ---"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-- \\'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v(' 演示 ---"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行脚本，输出结果如下所示：")]),s._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x test.sh\n$ ./test.sh "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n-- "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v(" 演示 ---\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n-- "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v(" 演示 ---\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);